% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createSegmentsListBySnps.r
\name{createSegmentsListBySnps}
\alias{createSegmentsListBySnps}
\title{Creation of a list of segments}
\usage{
createSegmentsListBySnps(bedmatrix, gap = 0.5, number_of_marker = 50,
  number_of_segments = 20, unit = "cM", verbose = TRUE)
}
\arguments{
\item{bedmatrix}{a bed.matrix object}

\item{gap}{Allows the user to select the minimum gap after which a segment is identified (default is 0.5)}

\item{number_of_marker}{the minimum number of marker in a mini segment (default is 50)}

\item{number_of_segments}{the number of part in which the segment will be splitted (defaut is 20)}

\item{unit}{this argument is used only when you make submaps using segments created using the gap between markers, two options are allowed "Bases", "cM" (default is "cM")}

\item{verbose}{whether you want informations about the computation process (default is TRUE)}
}
\value{
an snps.segments object
}
\description{
This function is used to create a list of segments delimited by using gaps in the genome.
}
\details{
This function is used to create a list of chromosome list, which contains segments delimited by using the gap between marker.

The list is then wrap under an object of class snps.segments, which contains two slots, the first slot is the value of the gap used to 
create the segment, the second is the list of mini segment and marker in it.

In each mini segment you have the index of all the makers in it, these index correpond to markers in the bedmatrix object.

The list structure can be analyze using `str()` function on the object (! careful the result can look messy if not handle properly)

The number of marker in a mini segment is obtained by computing the length of the segments divided by the number of mini segment wanted. 
If the result is less than the number in the variable number_of_marker we keep the segment and do not split it. 
Else we use the `split` function to cut the segment into chunks of mini segment.

Let us use N as the number of mini segment and T the result of the computation (length of the segment/number of mini segment).
If T is an integer the length of the mini segment is exactly T. If T isn't an integer, the length of the mini segment is round(T) or round(T+1).

The proportion of mini segment with length T+1 increases when T approch round(T+1)

If (length of the segment/number of mini segment) is equal or greater than the number in the variable number_of_marker, will always have the exact number of 
mini segments in the variable number_of_segment.#'
}
\examples{
 
#install.packages("HGDP.CEPH", repos="https://genostats.github.io/R/") ## make this only one time
require(Fantasio)
require(HGDP.CEPH)
filepath <-system.file("extdata", "hgdp_ceph.bed", package="HGDP.CEPH")
x <- read.bed.matrix(filepath)
x <- set.stats(x)
x.me <- select.inds(x, population == "Bedouin")
x.me@ped$pheno <- rep(2,48)
segmentList <- createSegmentsListBySnps(x.me)
}
\seealso{
read.bed.matrix

Fantasio
}
